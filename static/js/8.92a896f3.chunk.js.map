{"version":3,"file":"static/js/8.92a896f3.chunk.js","mappings":"mQAEe,SAASA,EAAT,GAA6B,IAAXC,EAAU,EAAVA,QAC7B,OACI,0BACI,0BACKA,EAAQC,KAAI,SAAAC,GAAM,OACf,2BACI,qCAAW,uBAAIA,EAAOC,YACrBD,EAAOE,UAFHF,EAAOG,OAFxB,SCAG,SAASC,IAEpB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAAwCE,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WAAM,wCAEZ,8GAEmCC,EAAAA,EAAAA,IAAcR,GAFjD,OAEcG,EAFd,OAGQC,EAAgBD,EAAaM,SAHrC,gDAKQH,EAAS,EAAD,IALhB,0DAFY,uBAAC,WAAD,wBAWZI,KAEC,CAACV,KAGF,2BACKK,IAAS,+CAAuBA,EAAMM,WACtCR,EAAaS,OAAO,GAAE,SAACpB,EAAD,CAASC,QAASU,KAAgB,oE,0MC5BrEU,IAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAM,mCAEL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBF,IAAAA,IAAA,sCAAyCC,IAD3D,cACCE,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,uFACkBN,IAAAA,IAAA,gCACIC,EADJ,kBACiBK,IAFnC,cACCH,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA4BtB,GAA5B,uFACkBe,IAAAA,IAAA,iBACXf,EADW,oBACGgB,EADH,oBADlB,cACCE,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA4BvB,GAA5B,uFACkBe,IAAAA,IAAA,iBACXf,EADW,4BACWgB,EADX,oBADlB,cACCE,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeT,EAAtB,+CAAO,OAAP,oBAAO,WAA6BV,GAA7B,uFACkBe,IAAAA,IAAA,iBACXf,EADW,4BACWgB,EADX,oBADlB,cACCE,EADD,yBAIEA,EAASC,MAJX","sources":["components/Reviews/Reviews.jsx","pages/ReviewsPage.jsx","services/moviesApi.js"],"sourcesContent":["import PropTypes from 'prop-types';\n\nexport default function Reviews({reviews}) {\n    return(\n        <div>\n            <ul>\n                {reviews.map(review => \n                    <li key={review.id}>\n                        <p>Author: <b>{review.author}</b></p>\n                        {review.content}\n                    </li>\n                )};\n            </ul>\n        </div>\n    )\n}\n\nReviews.propTypes = {\n    reviews: PropTypes.array.isRequired\n}","import { useState, useEffect } from \"react\"\nimport { useParams } from 'react-router-dom';\nimport { moviesReviews } from '../services/moviesApi.js'\nimport Reviews from '../components/Reviews/Reviews'\n\nexport default function ReviewsView() {\n\n    const { movieId } = useParams();\n\n    const [movieReviews, setMovieReviews] = useState([])\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n\n        async function fetchMovieReviews() {\n            try {\n                const movieReviews = await moviesReviews(movieId);\n                setMovieReviews(movieReviews.results)\n            } catch (error) {\n                setError(error)\n            } \n        }\n\n        fetchMovieReviews();\n\n      }, [movieId]);\n\n    return (\n        <div>\n            {error && <p>An error occurred: {error.message}</p>}\n            {movieReviews.length>1?<Reviews reviews={movieReviews}/>:<p>There are no reviews for this movie</p>}\n        </div>\n    )\n}","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst KEY = 'a44bb9523e0650c67fadd4918a95b1b0';\n\nexport async function fetchTrending() {\n  const response = await axios.get(`/trending/movie/day?api_key=${KEY}`);\n  return response.data;\n}\n\nexport async function searchMovie(searchString) {\n  const response = await axios.get(\n    `/search/movie?api_key=${KEY}&query=${searchString}`\n  );\n  return response.data;\n}\n\nexport async function movieDetails(id) {\n  const response = await axios.get(\n    `/movie/${id}?api_key=${KEY}&language=en-US`\n  );\n  return response.data;\n}\n\nexport async function movieCredits(id) {\n  const response = await axios.get(\n    `/movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n  return response.data;\n}\n\nexport async function moviesReviews(id) {\n  const response = await axios.get(\n    `/movie/${id}/reviews?api_key=${KEY}&language=en-US`\n  );\n  return response.data;\n}\n"],"names":["Reviews","reviews","map","review","author","content","id","ReviewsView","movieId","useParams","useState","movieReviews","setMovieReviews","error","setError","useEffect","moviesReviews","results","fetchMovieReviews","message","length","axios","KEY","fetchTrending","response","data","searchMovie","searchString","movieDetails","movieCredits"],"sourceRoot":""}