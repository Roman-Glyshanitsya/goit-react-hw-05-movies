{"version":3,"file":"static/js/674.001c2770.chunk.js","mappings":"qQACA,EAA6B,+BAA7B,EAA8E,oCAA9E,EAAkI,kC,SCInH,SAASA,EAAT,GAAsC,IAAZC,EAAW,EAAXA,SACrC,GAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAkBA,OACI,kBAAMC,UAAWC,EAAjB,WACI,kBACIC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,eACZL,UAAWC,EACXK,SAxBS,SAAAC,GACjBR,EAAeQ,EAAMC,cAAcC,MAAMC,mBAyBrC,mBAAQV,UAAWC,EAAiBC,KAAK,SAASS,QAtBrC,SAAAJ,GACjBA,EAAMK,iBAEqB,KAAvBd,EAAYe,QAKhBjB,EAASE,GACTC,EAAe,KALXe,EAAAA,GAAAA,MAAY,+BAkBZ,uB,cC7BG,SAASC,IAEpB,IAAMC,GAAWC,EAAAA,EAAAA,MAEjB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAaF,EAAaG,IAAI,SAEpC,GAA4BzB,EAAAA,EAAAA,UAAS,IAArC,eAAO0B,EAAP,KAAeC,EAAf,KACA,GAA4B3B,EAAAA,EAAAA,UAAS,IAArC,eAAO4B,EAAP,KAAeC,EAAf,KACA,GAA8B7B,EAAAA,EAAAA,WAAS,GAAvC,eAAO8B,EAAP,KAAgBC,EAAhB,KACA,GAA0B/B,EAAAA,EAAAA,UAAS,MAAnC,eAAOgC,EAAP,KAAcC,EAAd,MAEAC,EAAAA,EAAAA,YAAU,WAAM,wCAQZ,2FACIH,GAAW,GADf,mBAG6B9B,EAAAA,EAAAA,IAAYyB,GAHzC,OAGcE,EAHd,OAIQC,EAAUD,EAAOO,SAJzB,gDAMQF,EAAS,EAAD,IANhB,yBAQQF,GAAW,GARnB,6EARY,sBACRL,EADQ,mCAoBZU,GAlBOZ,GACCG,EAAUH,KAmBjB,CAACE,EAAQF,IAOd,OACI,2BACKM,GAAW,aACXE,IAAS,8CAAsBA,EAAMK,YACtC,SAAC,EAAD,CAAYtC,SATK,SAACuC,GACtBX,EAAUW,GACVf,EAAgB,SAAD,OAAUe,OAQpBV,IACG,wBACKA,EAAOW,KAAI,SAAAC,GAAK,OAAI,yBAAmB,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMzB,GAAhD,SAA6DqB,EAAMK,SAA7EL,EAAME,c,0MCnDxDI,IAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAM,mCAEL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBF,IAAAA,IAAA,sCAAyCC,IAD3D,cACCE,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAejD,EAAtB,+CAAO,OAAP,oBAAO,WAA2BqC,GAA3B,uFACkBQ,IAAAA,IAAA,gCACIC,EADJ,kBACiBT,IAFnC,cACCW,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BT,GAA5B,uFACkBI,IAAAA,IAAA,iBACXJ,EADW,oBACGK,EADH,oBADlB,cACCE,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA4BV,GAA5B,uFACkBI,IAAAA,IAAA,iBACXJ,EADW,4BACWK,EADX,oBADlB,cACCE,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA6BX,GAA7B,uFACkBI,IAAAA,IAAA,iBACXJ,EADW,4BACWK,EADX,oBADlB,cACCE,EADD,yBAIEA,EAASC,MAJX","sources":["webpack://react-homework-template/./src/components/SearchForm/SearchForm.module.css?d6f1","components/SearchForm/SearchForm.jsx","pages/MoviesPage.jsx","services/moviesApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"searchForm\":\"SearchForm_searchForm__NsJpF\",\"searchFormInput\":\"SearchForm_searchFormInput__3mF-P\",\"searchFormBtn\":\"SearchForm_searchFormBtn__wsLs5\"};","import { useState } from \"react\";\nimport { toast } from 'react-toastify';\nimport s from './SearchForm.module.css';\nimport PropTypes from 'prop-types';\n\nexport default function MovieSearchForm({onSubmit}) {\n    const [searchMovie, setSearchMovie] = useState('');\n\n    const handleChange = event => {\n        setSearchMovie(event.currentTarget.value.toLowerCase());\n    };\n\n    const handleSubmit = event => {\n        event.preventDefault();\n\n        if (searchMovie.trim() === '') {\n            toast.error('Enter something for search');\n            return;\n        }\n\n        onSubmit(searchMovie);\n        setSearchMovie('');\n    }\n\n    return(\n        <form className={s.searchForm}>\n            <input\n                type=\"text\"\n                autoComplete=\"off\"\n                autoFocus\n                placeholder=\"Search movie\"\n                className={s.searchFormInput}\n                onChange={handleChange}> \n            </input>\n            <button className={s.searchFormBtn} type=\"submit\" onClick={handleSubmit}>Search</button>\n        </form>\n    )\n}\n\nMovieSearchForm.propTypes = {\n    onSubmit: PropTypes.func.isRequired\n};","import { useState, useEffect } from 'react';\nimport { useLocation, Link, useSearchParams} from 'react-router-dom';\nimport SearchForm from 'components/SearchForm/SearchForm'\nimport { searchMovie } from '../services/moviesApi.js'\n\nexport default function MoviesView() {\n\n    const location = useLocation();\n\n    const [searchParams, setSearchParams] = useSearchParams();\n    const queryValue = searchParams.get('query');\n\n    const [filter, setFilter] = useState('')\n    const [movies, setMovies] = useState([])\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        if(!filter) {\n            if(queryValue){\n                setFilter(queryValue)\n            }\n            return;\n        }\n\n        async function fetchMovies() {\n            setLoading(true);\n            try {\n                const movies = await searchMovie(filter);\n                setMovies(movies.results)\n            } catch (error) {\n                setError(error)\n            } finally {\n                setLoading(false)\n            }\n        }\n\n        fetchMovies();\n\n      }, [filter, queryValue]);\n\n    const handleFormSubmit = (searchString) => {\n        setFilter(searchString)\n        setSearchParams(`query=${searchString}`);\n    }\n\n    return(\n        <div>\n            {loading && 'Loading...'}\n            {error && <p>An error occured: {error.message}</p>}\n            <SearchForm onSubmit={handleFormSubmit}/>\n            {movies && \n                <ul>\n                    {movies.map(movie => <li key={movie.id}><Link to={`/movies/${movie.id}`} state={{ from: location }}>{movie.title}</Link></li>)}\n                </ul>\n            }\n        </div>\n    ) \n}","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst KEY = 'a44bb9523e0650c67fadd4918a95b1b0';\n\nexport async function fetchTrending() {\n  const response = await axios.get(`/trending/movie/day?api_key=${KEY}`);\n  return response.data;\n}\n\nexport async function searchMovie(searchString) {\n  const response = await axios.get(\n    `/search/movie?api_key=${KEY}&query=${searchString}`\n  );\n  return response.data;\n}\n\nexport async function movieDetails(id) {\n  const response = await axios.get(\n    `/movie/${id}?api_key=${KEY}&language=en-US`\n  );\n  return response.data;\n}\n\nexport async function movieCredits(id) {\n  const response = await axios.get(\n    `/movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n  return response.data;\n}\n\nexport async function moviesReviews(id) {\n  const response = await axios.get(\n    `/movie/${id}/reviews?api_key=${KEY}&language=en-US`\n  );\n  return response.data;\n}\n"],"names":["MovieSearchForm","onSubmit","useState","searchMovie","setSearchMovie","className","s","type","autoComplete","autoFocus","placeholder","onChange","event","currentTarget","value","toLowerCase","onClick","preventDefault","trim","toast","MoviesView","location","useLocation","useSearchParams","searchParams","setSearchParams","queryValue","get","filter","setFilter","movies","setMovies","loading","setLoading","error","setError","useEffect","results","fetchMovies","message","searchString","map","movie","to","id","state","from","title","axios","KEY","fetchTrending","response","data","movieDetails","movieCredits","moviesReviews"],"sourceRoot":""}