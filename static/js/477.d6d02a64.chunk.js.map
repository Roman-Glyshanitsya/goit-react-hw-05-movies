{"version":3,"file":"static/js/477.d6d02a64.chunk.js","mappings":"4PACA,EAAuB,mB,SCER,SAASA,EAAKC,GACzB,IAAOC,EAAQD,EAARC,KAEP,OACI,4BACI,kCACA,wBACKA,EAAKC,KAAI,SAAAC,GAAK,OACX,gBAAmBC,UAAWC,EAA9B,WACI,gBAAKC,IAAG,0CAAqCH,EAAMI,cAAgBC,IAAKL,EAAMM,KAAMC,MAAM,UACzFP,EAAMM,OAFFN,EAAMQ,YCNpB,SAASC,IACpB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCE,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WAAM,wCACZ,8GAEgCC,EAAAA,EAAAA,IAAaR,GAF7C,OAEcG,EAFd,OAGQC,EAAaD,EAAUf,MAH/B,gDAKQkB,EAAS,EAAD,IALhB,0DADY,uBAAC,WAAD,wBASZG,KACC,CAACT,KAGF,2BACKK,IAAS,+CAAuBA,EAAMK,WACtCP,IAAa,SAACjB,EAAD,CAAME,KAAMe,S,0MCvBtCQ,IAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAM,mCAEL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBF,IAAAA,IAAA,sCAAyCC,IAD3D,cACCE,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,uFACkBN,IAAAA,IAAA,gCACIC,EADJ,kBACiBK,IAFnC,cACCH,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA4BpB,GAA5B,uFACkBa,IAAAA,IAAA,iBACXb,EADW,oBACGc,EADH,oBADlB,cACCE,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeP,EAAtB,+CAAO,OAAP,oBAAO,WAA4BV,GAA5B,uFACkBa,IAAAA,IAAA,iBACXb,EADW,4BACWc,EADX,oBADlB,cACCE,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA6BrB,GAA7B,uFACkBa,IAAAA,IAAA,iBACXb,EADW,4BACWc,EADX,oBADlB,cACCE,EADD,yBAIEA,EAASC,MAJX","sources":["webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","pages/CastPage.jsx","services/moviesApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Cast_item__a0CDL\"};","import PropTypes from 'prop-types';\nimport s from './Cast.module.css';\n\nexport default function Cast(props) {\n    const {cast} = props\n\n    return(\n        <div>\n            <h3>Cast</h3>\n            <ul>\n                {cast.map(actor => \n                    <li key={actor.id} className={s.item}>\n                        <img src={`https://image.tmdb.org/t/p/w200/${actor.profile_path}`} alt={actor.name} width=\"100px\"/>\n                        {actor.name}\n                    </li>\n                )}\n            </ul>\n        </div>\n    )\n}\n\nCast.propTypes = {\n    cast: PropTypes.array.isRequired\n}","import { useState, useEffect } from \"react\";\nimport { useParams } from 'react-router-dom';\nimport { movieCredits } from '../services/moviesApi.js';\nimport Cast from 'components/Cast/Cast';\n\nexport default function CastView() {\n    const { movieId } = useParams();\n    const [movieCast, setMovieCast] = useState(null)\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        async function fetchMovieCast() {\n            try {\n                const movieCast = await movieCredits(movieId);\n                setMovieCast(movieCast.cast)\n            } catch (error) {\n                setError(error)\n            } \n        }\n        fetchMovieCast();\n      }, [movieId]);\n\n    return (\n        <div>\n            {error && <p>An error occurred: {error.message}</p>}\n            {movieCast && <Cast cast={movieCast}/>}\n        </div>\n    )\n}","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst KEY = 'a44bb9523e0650c67fadd4918a95b1b0';\n\nexport async function fetchTrending() {\n  const response = await axios.get(`/trending/movie/day?api_key=${KEY}`);\n  return response.data;\n}\n\nexport async function searchMovie(searchString) {\n  const response = await axios.get(\n    `/search/movie?api_key=${KEY}&query=${searchString}`\n  );\n  return response.data;\n}\n\nexport async function movieDetails(id) {\n  const response = await axios.get(\n    `/movie/${id}?api_key=${KEY}&language=en-US`\n  );\n  return response.data;\n}\n\nexport async function movieCredits(id) {\n  const response = await axios.get(\n    `/movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n  return response.data;\n}\n\nexport async function moviesReviews(id) {\n  const response = await axios.get(\n    `/movie/${id}/reviews?api_key=${KEY}&language=en-US`\n  );\n  return response.data;\n}\n"],"names":["Cast","props","cast","map","actor","className","s","src","profile_path","alt","name","width","id","CastView","movieId","useParams","useState","movieCast","setMovieCast","error","setError","useEffect","movieCredits","fetchMovieCast","message","axios","KEY","fetchTrending","response","data","searchMovie","searchString","movieDetails","moviesReviews"],"sourceRoot":""}