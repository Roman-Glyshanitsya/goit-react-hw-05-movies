{"version":3,"file":"static/js/902.5c67949a.chunk.js","mappings":"qQACA,EAA4B,gCAA5B,EAA2E,mC,SCE5D,SAASA,EAAT,GAAkC,IAAVC,EAAS,EAATA,MACnC,OACI,iBAAKC,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,UACI,gBAAKC,IAAG,0CAAqCH,EAAMI,aAAeC,IAAKL,EAAMM,WAEjF,4BACI,0BAAKN,EAAMM,MAAX,KAAoBN,EAAMO,aAAaC,MAAM,EAAE,GAA/C,QACA,wCAAgBC,KAAKC,MAA2B,GAArBV,EAAMW,cAAjC,QACA,sCACA,uBAAIX,EAAMY,YACV,mCACCZ,EAAMa,OAAOC,KAAI,SAAAC,GAAC,OAAIA,EAAEC,KAAO,aCVjC,SAASC,IAAa,IAAD,IAExBC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MAGjB,GAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOtB,EAAP,KAAcuB,EAAd,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KACA,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOI,EAAP,KAAcC,EAAd,MAEAC,EAAAA,EAAAA,YAAU,WAAM,wCACZ,2FACIH,GAAW,GADf,mBAG4BI,EAAAA,EAAAA,IAAaX,GAHzC,OAGclB,EAHd,OAIQuB,EAASvB,GAJjB,gDAMQ2B,EAAS,EAAD,IANhB,yBAQQF,GAAW,GARnB,6EADY,uBAAC,WAAD,wBAaZK,KAEC,CAACZ,IAEN,IAAMa,EAAI,iBAAGX,QAAH,IAAGA,GAAH,UAAGA,EAAUY,aAAb,aAAG,EAAiBC,YAApB,QAA4B,IAEtC,OACI,2BACKT,GAAW,aACXE,IAAS,8CAAsBA,EAAMQ,YACtC,SAAC,KAAD,CAAMC,GAAIJ,EAAV,UAAgB,0CACf/B,IAAS,SAACD,EAAD,CAAcC,MAAOA,KAC/B,oDACA,2BACI,yBAAI,SAAC,KAAD,CAAMmC,GAAE,kBAAajB,EAAb,SAA6Bc,MAAO,CAAEC,KAAMF,GAApD,qBACJ,yBAAI,SAAC,KAAD,CAAMI,GAAE,kBAAajB,EAAb,YAAgCc,MAAO,CAAEC,KAAMF,GAAvD,2BAER,SAAC,EAAAK,SAAD,WACI,SAAC,KAAD,W,0MC5ChBC,IAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAM,mCAEL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBF,IAAAA,IAAA,sCAAyCC,IAD3D,cACCE,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,uFACkBN,IAAAA,IAAA,gCACIC,EADJ,kBACiBK,IAFnC,cACCH,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeZ,EAAtB,+CAAO,OAAP,oBAAO,WAA4Be,GAA5B,uFACkBP,IAAAA,IAAA,iBACXO,EADW,oBACGN,EADH,oBADlB,cACCE,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA4BD,GAA5B,uFACkBP,IAAAA,IAAA,iBACXO,EADW,4BACWN,EADX,oBADlB,cACCE,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA6BF,GAA7B,uFACkBP,IAAAA,IAAA,iBACXO,EADW,4BACWN,EADX,oBADlB,cACCE,EADD,yBAIEA,EAASC,MAJX","sources":["webpack://react-homework-template/./src/components/MovieDetails/MovieDetails.module.css?9ca9","components/MovieDetails/MovieDetails.jsx","pages/MovieDetailsPage.jsx","services/moviesApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MovieDetails_container__o8VqJ\",\"imageWrapper\":\"MovieDetails_imageWrapper__ImpNM\"};","import PropTypes from 'prop-types';\nimport s from './MovieDetails.module.css';\n\nexport default function MovieDetails({ movie }) {   \n    return (\n        <div className={s.container}>\n            <div className={s.imageWrapper}>\n                <img src={`https://image.tmdb.org/t/p/w200/${movie.poster_path}`} alt={movie.title} />\n            </div>\n            <div>\n                <h1>{movie.title} ({movie.release_date.slice(0,4)})</h1>\n                <p>User Score: {Math.round(movie.vote_average * 10)}%</p>\n                <h2>Overview</h2>\n                <p>{movie.overview}</p>\n                <h2>Genres</h2>\n                {movie.genres.map(g => g.name + ' ')}\n            </div>\n        </div>\n    )\n}\n\nMovieDetails.propTypes = {\n    movie: PropTypes.shape({\n        poster_path: PropTypes.string,\n        title: PropTypes.string,\n        release_date: PropTypes.string,\n        vote_average: PropTypes.number,\n        overview: PropTypes.string,\n    }).isRequired,\n};","import { useState, useEffect, Suspense } from \"react\"\nimport { useParams, Link, Outlet, useLocation} from 'react-router-dom';\nimport { movieDetails } from '../services/moviesApi.js'\nimport MovieDetails from 'components/MovieDetails/MovieDetails'\n\nexport default function MovieView() {\n\n    const { movieId } = useParams();\n    const location = useLocation();\n\n\n    const [movie, setMovie] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        async function fetchMovie() {\n            setLoading(true);\n            try {\n                const movie = await movieDetails(movieId);\n                setMovie(movie)\n            } catch (error) {\n                setError(error)\n            } finally {\n                setLoading(false)\n            }\n        }\n\n        fetchMovie();\n\n      }, [movieId]);\n\n    const path = location?.state?.from ?? '/';\n\n    return(\n        <div>\n            {loading && 'Loading...'}\n            {error && <p>An error occured: {error.message}</p>}\n            <Link to={path}><button>Go back</button></Link>\n            {movie && <MovieDetails movie={movie} />}\n            <h4>Additional information</h4>\n            <ul>\n                <li><Link to={`/movies/${movieId}/cast`} state={{ from: path }}>Cast</Link></li>\n                <li><Link to={`/movies/${movieId}/reviews`} state={{ from: path }}>Reviews</Link></li>\n            </ul>\n            <Suspense>\n                <Outlet />\n            </Suspense>\n            \n        </div>\n    )\n}","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst KEY = 'a44bb9523e0650c67fadd4918a95b1b0';\n\nexport async function fetchTrending() {\n  const response = await axios.get(`/trending/movie/day?api_key=${KEY}`);\n  return response.data;\n}\n\nexport async function searchMovie(searchString) {\n  const response = await axios.get(\n    `/search/movie?api_key=${KEY}&query=${searchString}`\n  );\n  return response.data;\n}\n\nexport async function movieDetails(id) {\n  const response = await axios.get(\n    `/movie/${id}?api_key=${KEY}&language=en-US`\n  );\n  return response.data;\n}\n\nexport async function movieCredits(id) {\n  const response = await axios.get(\n    `/movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n  return response.data;\n}\n\nexport async function moviesReviews(id) {\n  const response = await axios.get(\n    `/movie/${id}/reviews?api_key=${KEY}&language=en-US`\n  );\n  return response.data;\n}\n"],"names":["MovieDetails","movie","className","s","src","poster_path","alt","title","release_date","slice","Math","round","vote_average","overview","genres","map","g","name","MovieView","movieId","useParams","location","useLocation","useState","setMovie","loading","setLoading","error","setError","useEffect","movieDetails","fetchMovie","path","state","from","message","to","Suspense","axios","KEY","fetchTrending","response","data","searchMovie","searchString","id","movieCredits","moviesReviews"],"sourceRoot":""}