{"version":3,"file":"static/js/999.47a5c533.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/SearchForm/SearchForm.module.css?d6f1","components/SearchForm/SearchForm.jsx","pages/MoviesPage/MoviesPage.module.css","pages/MoviesPage/MoviesPage.jsx","services/moviesApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"searchForm\":\"SearchForm_searchForm__NsJpF\",\"searchFormInput\":\"SearchForm_searchFormInput__3mF-P\",\"searchFormBtn\":\"SearchForm_searchFormBtn__wsLs5\"};","import { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport s from './SearchForm.module.css';\nimport PropTypes from 'prop-types';\n\nexport default function MovieSearchForm({ onSubmit }) {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n  const [searchMovie, setSearchMovie] = useState(query ?? '');\n\n  const handleChange = event => {\n    setSearchMovie(event.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (searchMovie.trim() === '') {\n      toast.error('Enter something for search');\n      return;\n    }\n\n    setSearchParams({ query: searchMovie });\n    onSubmit(searchMovie);\n  };\n\n  return (\n    <form className={s.searchForm} onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        value={searchMovie}\n        name=\"query\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movie\"\n        className={s.searchFormInput}\n        onChange={handleChange}\n      ></input>\n      <button className={s.searchFormBtn} type=\"submit\">\n        Search\n      </button>\n    </form>\n  );\n}\n\nMovieSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {};","import { useState, useEffect } from 'react';\nimport { useLocation, Link, useSearchParams } from 'react-router-dom';\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport { searchMovie } from '../../services/moviesApi.js';\nimport s from './MoviesPage.module.css';\n\nexport default function MoviesView() {\n  const location = useLocation();\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const queryValue = searchParams.get('query');\n\n  const [filter, setFilter] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (!filter) {\n      if (queryValue) {\n        setFilter(queryValue);\n      }\n      return;\n    }\n\n    async function fetchMovies() {\n      setLoading(true);\n      try {\n        const movies = await searchMovie(filter);\n        setMovies(movies.results);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    fetchMovies();\n  }, [filter, queryValue]);\n\n  const handleFormSubmit = searchString => {\n    setFilter(searchString);\n    setSearchParams(`query=${searchString}`);\n  };\n\n  return (\n    <div>\n      {loading && 'Loading...'}\n      {error && <p>An error occured: {error.message}</p>}\n      <SearchForm onSubmit={handleFormSubmit} />\n      {movies && (\n        <ul className={s.list}>\n          {movies.map(movie => (\n            <li className={s.item} key={movie.id}>\n              <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n                {movie.title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst KEY = 'a44bb9523e0650c67fadd4918a95b1b0';\n\nexport async function fetchTrending() {\n  const response = await axios.get(`/trending/movie/day?api_key=${KEY}`);\n  return response.data;\n}\n\nexport async function searchMovie(searchString) {\n  const response = await axios.get(\n    `/search/movie?api_key=${KEY}&query=${searchString}`\n  );\n  return response.data;\n}\n\nexport async function movieDetails(id) {\n  const response = await axios.get(\n    `/movie/${id}?api_key=${KEY}&language=en-US`\n  );\n  return response.data;\n}\n\nexport async function movieCredits(id) {\n  const response = await axios.get(\n    `/movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n  return response.data;\n}\n\nexport async function moviesReviews(id) {\n  const response = await axios.get(\n    `/movie/${id}/reviews?api_key=${KEY}&language=en-US`\n  );\n  return response.data;\n}\n"],"names":["MovieSearchForm","onSubmit","useSearchParams","searchParams","setSearchParams","query","get","useState","searchMovie","setSearchMovie","className","s","event","preventDefault","trim","toast","type","value","name","autoComplete","autoFocus","placeholder","onChange","currentTarget","toLowerCase","MoviesView","location","useLocation","queryValue","filter","setFilter","movies","setMovies","loading","setLoading","error","setError","useEffect","results","fetchMovies","message","searchString","map","movie","to","id","state","from","title","axios","KEY","fetchTrending","response","data","movieDetails","movieCredits","moviesReviews"],"sourceRoot":""}